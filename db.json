{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/beautiful-hexo/source/hexo.png","path":"hexo.png","modified":1,"renderable":1},{"_id":"themes/beautiful-hexo/source/css/blueprint-dark.png","path":"css/blueprint-dark.png","modified":1,"renderable":1},{"_id":"themes/beautiful-hexo/source/css/highlight.css","path":"css/highlight.css","modified":1,"renderable":1},{"_id":"themes/beautiful-hexo/source/css/main-minimal.css","path":"css/main-minimal.css","modified":1,"renderable":1},{"_id":"themes/beautiful-hexo/source/css/main.css","path":"css/main.css","modified":1,"renderable":1},{"_id":"themes/beautiful-hexo/source/css/normalize.min.css","path":"css/normalize.min.css","modified":1,"renderable":1},{"_id":"themes/beautiful-hexo/source/css/pygment_highlights.css","path":"css/pygment_highlights.css","modified":1,"renderable":1},{"_id":"themes/beautiful-hexo/source/css/normalize.css","path":"css/normalize.css","modified":1,"renderable":1},{"_id":"themes/beautiful-hexo/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/beautiful-hexo/source/bigimgs/02.jpg","path":"bigimgs/02.jpg","modified":1,"renderable":1},{"_id":"themes/beautiful-hexo/source/bigimgs/01.jpg","path":"bigimgs/01.jpg","modified":1,"renderable":1},{"_id":"themes/beautiful-hexo/source/bigimgs/03.jpg","path":"bigimgs/03.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/beautiful-hexo/.gitignore","hash":"4b40e2bf9a87584f198091434ed6f7ebbb829497","modified":1501134033502},{"_id":"themes/beautiful-hexo/LICENSE","hash":"99f2c87ae44734a9285212301c19293d2495bf79","modified":1501134033502},{"_id":"source/job/index.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501133330509},{"_id":"themes/beautiful-hexo/README.md","hash":"3fc0df1f0e17cf7586e0dc26357b36407a023582","modified":1501134033502},{"_id":"themes/beautiful-hexo/package.json","hash":"d84cf6dc4ebd800a768501843180341e87a84ae3","modified":1501134033502},{"_id":"themes/beautiful-hexo/_config.yml","hash":"212c9fd1e8f5c2e569cd80e643d127ea0d8d7562","modified":1501134033502},{"_id":"themes/beautiful-hexo/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1501134033486},{"_id":"themes/beautiful-hexo/.git/config","hash":"48a4af0bb482d8345e556fcc5bb064e48548d133","modified":1501134033486},{"_id":"source/_posts/hello-world.md","hash":"dba247b16cc83646fd73f7d797be9ea7da8c96b0","modified":1501122392379},{"_id":"themes/beautiful-hexo/.git/index","hash":"25ff78bb9f73b16665e53d35a945de0968a4548a","modified":1501134034178},{"_id":"themes/beautiful-hexo/.git/packed-refs","hash":"0bb38da10b51853beb84b9f2b4f85b9e7675d2d7","modified":1501134033482},{"_id":"themes/beautiful-hexo/.git/shallow","hash":"aeb1d5d09df08098938b53a3b3c06359cb5d9bdb","modified":1501134023310},{"_id":"source/about/index.md","hash":"f70034a5de2cc0d80b3b56900a862caa1806c7a7","modified":1501133330509},{"_id":"source/_posts/httpCache.md","hash":"e2e44a4bc210a23f2a9fb7955f767184bc6c67c5","modified":1501148983778},{"_id":"themes/beautiful-hexo/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1501134020898},{"_id":"themes/beautiful-hexo/languages/en.yml","hash":"edca6efa5afd7ca478391bd24be970d2c04ddfbd","modified":1501134033502},{"_id":"themes/beautiful-hexo/languages/it.yml","hash":"806ca5d4d65e933e8d53789531af5628de717a3f","modified":1501134033502},{"_id":"themes/beautiful-hexo/languages/pt-br.yml","hash":"b3e0fecfbde36c3ac1b8516882fa6e4568e153c5","modified":1501134033502},{"_id":"themes/beautiful-hexo/languages/ru.yml","hash":"df23b6d4d0eb1c0a257a2ec63d5bb7b372d2dd3d","modified":1501134033502},{"_id":"themes/beautiful-hexo/languages/zh-cn.yml","hash":"538fa673943ef185d6af23414693042c24b18684","modified":1501134033502},{"_id":"themes/beautiful-hexo/layout/archive.jade","hash":"b599d808e8f400244bdf84452551ea8ea5a4c70b","modified":1501134033502},{"_id":"themes/beautiful-hexo/layout/index.jade","hash":"4aa0a20b9dcbd0905fcfb2589362a41d523d72c2","modified":1501134033502},{"_id":"themes/beautiful-hexo/layout/page.jade","hash":"8ccd83e78150213c21d5941846cdef757f37c581","modified":1501134033502},{"_id":"themes/beautiful-hexo/layout/post.jade","hash":"afba374e8ba51e15a8d879cbe77994357fbc972a","modified":1501134033502},{"_id":"themes/beautiful-hexo/source/hexo.png","hash":"e814051ff5e255deebff24733f760a898f8f2e69","modified":1501134033506},{"_id":"themes/beautiful-hexo/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1501134020898},{"_id":"themes/beautiful-hexo/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1501134020898},{"_id":"themes/beautiful-hexo/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1501134020898},{"_id":"themes/beautiful-hexo/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1501134020898},{"_id":"themes/beautiful-hexo/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1501134020898},{"_id":"themes/beautiful-hexo/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1501134020898},{"_id":"themes/beautiful-hexo/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1501134020898},{"_id":"themes/beautiful-hexo/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1501134020898},{"_id":"themes/beautiful-hexo/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1501134020898},{"_id":"themes/beautiful-hexo/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1501134020898},{"_id":"themes/beautiful-hexo/layout/partial/base.jade","hash":"396af6da8c6b16f7982a16b128b81b8817b59624","modified":1501134033502},{"_id":"themes/beautiful-hexo/layout/partial/comment.jade","hash":"49af5426ddae4bf2633aeec5b2cdababe3eff69a","modified":1501134033502},{"_id":"themes/beautiful-hexo/layout/partial/disqus.jade","hash":"9d9044a555342cc01698cbeb1259223ed41f46bc","modified":1501134033502},{"_id":"themes/beautiful-hexo/layout/partial/facebook-comments.jade","hash":"e13dd7ededa41c30cdbd0ea9157175e1be4ad5a7","modified":1501134033502},{"_id":"themes/beautiful-hexo/layout/partial/footer-scripts.jade","hash":"474495978b0bf560cb491130e51c9a5adcc7c187","modified":1501134033502},{"_id":"themes/beautiful-hexo/layout/partial/footer.jade","hash":"af990c40dbde9bd44aab32331efda6179f9d7eec","modified":1501134033502},{"_id":"themes/beautiful-hexo/layout/partial/google_analytics.jade","hash":"4972fd998aa0ac476c4a4a497407b80fe3dc1af8","modified":1501134033502},{"_id":"themes/beautiful-hexo/layout/partial/head.jade","hash":"0182c781ae906d002f984179d7b40d268e0ac641","modified":1501134033502},{"_id":"themes/beautiful-hexo/layout/partial/index-header.jade","hash":"b4db74194f0500a5786b3e385c39965562ce0806","modified":1501134033502},{"_id":"themes/beautiful-hexo/layout/partial/nav.jade","hash":"efdb2145ca041f4828269f12125e88ac78ac4c8c","modified":1501134033502},{"_id":"themes/beautiful-hexo/layout/partial/netease.jade","hash":"bc67e987ed3405a92cbc0f5bc16bc4279811e592","modified":1501134033502},{"_id":"themes/beautiful-hexo/layout/partial/post-meta.jade","hash":"bb0acc88e7527e3d95de2f2b6029957b96a0e7cc","modified":1501134033502},{"_id":"themes/beautiful-hexo/source/css/blueprint-dark.png","hash":"725b992538a19f5ded0329c8a778dcd74bca7522","modified":1501134033506},{"_id":"themes/beautiful-hexo/source/css/highlight.css","hash":"3c0cd05d7c1e3d00203e72a3f6ac99f521e2455c","modified":1501134033506},{"_id":"themes/beautiful-hexo/source/css/main-minimal.css","hash":"e2b7f8ccfdb858c3969c756aa94a761970349d68","modified":1501134033506},{"_id":"themes/beautiful-hexo/source/css/main.css","hash":"4068f67e04bad6565973ee7d6830879f2093cbd8","modified":1501134033506},{"_id":"themes/beautiful-hexo/source/css/normalize.min.css","hash":"a8d03b757f75752e15aa9e43ed8c071cb50e848d","modified":1501134033506},{"_id":"themes/beautiful-hexo/source/css/pygment_highlights.css","hash":"f4e5374eae88aa573b9bef83ae131a0f05cc94e7","modified":1501134033506},{"_id":"themes/beautiful-hexo/source/css/normalize.css","hash":"6924ce12bf79586ce0c095157aed4438e97bbe89","modified":1501134033506},{"_id":"themes/beautiful-hexo/source/js/main.js","hash":"9e9bf3864ac1db24c5b20f46d92557b815d36d93","modified":1501134033506},{"_id":"themes/beautiful-hexo/.git/refs/heads/master","hash":"aeb1d5d09df08098938b53a3b3c06359cb5d9bdb","modified":1501134033486},{"_id":"themes/beautiful-hexo/.git/logs/HEAD","hash":"7903d84d9cf146f38ec0c0124704619f6ccb5aab","modified":1501134033486},{"_id":"themes/beautiful-hexo/.git/objects/0f/36e2ee45f74edf146924a4d215a33f92ad64fe","hash":"38aa872a38b526d1f508fb77a4146e812107a53b","modified":1501134030270},{"_id":"themes/beautiful-hexo/.git/objects/18/ddf7fede130e870c5cdd33945d3321f8e2f2a0","hash":"9dea4d8427365e3f8420ed13877bb26788eb6ac7","modified":1501134033478},{"_id":"themes/beautiful-hexo/.git/objects/1c/8b8ef8f0bd7882816a0ddc739efdbe9878f98f","hash":"797d760394a6c4fdb48e26fa156af2804c42b6b6","modified":1501134033478},{"_id":"themes/beautiful-hexo/.git/objects/01/58db55b22271579bd600da59b0b50314426cfe","hash":"2cd43b47bd99c8fbe952242f5c094df9501b3efc","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/34/c69568854fc9da040d84d83f0617663a9f4dea","hash":"e6392c863d905cf37fcc649e642c5b4d56c1f925","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/34/0881516f4de25ee7069c0d371e2ee6660e339b","hash":"44e44832163badad25b80ab304f24bb229b5bc8f","modified":1501134033478},{"_id":"themes/beautiful-hexo/.git/objects/07/e601a1fdf2376cf814ebf552f33d34ac498168","hash":"aabd295f640d6a15265619d55770c970fbcdb5d0","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/39/3b27cad68f9b89ddb0b29909d440055b1f3c6c","hash":"103bf534033f482af743c2041c692cc835c17108","modified":1501134030270},{"_id":"themes/beautiful-hexo/.git/objects/48/e36e62bc9605bac3b87b43b35524aea5c8110b","hash":"6b5b04f3f8b1a25fb797fb046198db9db0ef215a","modified":1501134033478},{"_id":"themes/beautiful-hexo/.git/objects/44/e6339b33d2312ff344bb060dc1c68aad10810d","hash":"c0a7c8dec2257b192e6488bc94d6fd0199717b46","modified":1501134033482},{"_id":"themes/beautiful-hexo/.git/objects/4b/62e004eaa354cea3f0394c5df7dfc639f1effb","hash":"b4048e3ddcc74e8e068898806b0e77b039ad3682","modified":1501134033478},{"_id":"themes/beautiful-hexo/.git/objects/4a/2c85f4421c1ffe13800e6e2db301715b2bd552","hash":"ecc123eebb6e4d5774b0fe616541cd1d01830361","modified":1501134033482},{"_id":"themes/beautiful-hexo/.git/objects/4e/74fe68dbcfe04629c48de651f91a5d11375e7f","hash":"579a77591ce07ee557256b6cc1fb679251bdddb9","modified":1501134023614},{"_id":"themes/beautiful-hexo/.git/objects/56/a7560c4d2daa969acc677b80cb3d9502f6f25f","hash":"358a0d7d337b91fc7bd235cb3d0ad73c24bde1ba","modified":1501134023614},{"_id":"themes/beautiful-hexo/.git/objects/77/9e5acfb018e8cf3a184116561337c17e93e5ed","hash":"64b755d83d07529560dc1498ca8bc321e0bd226e","modified":1501134033478},{"_id":"themes/beautiful-hexo/.git/objects/78/f9502a745bdd12c07e5bca129b698429331e91","hash":"d91672730437d7a789bf397953aa30b5ac1ccea5","modified":1501134023614},{"_id":"themes/beautiful-hexo/.git/objects/4d/e5703a2a5610d551555886c8367ab8f1f72ef8","hash":"ed3c8dd01202d9acdca2efe07fa0d4ac1f32035c","modified":1501134023614},{"_id":"themes/beautiful-hexo/.git/objects/6b/aca797071b482a6122a23f49f7f7c541f715c9","hash":"8d7cf3deaa2af4d9af9d0e829a07baaa899edfad","modified":1501134033478},{"_id":"themes/beautiful-hexo/.git/objects/79/fe00036d40052d8c3494b4d3259e942a4baae9","hash":"61ba980152a646633ba29ddd42e342f265229135","modified":1501134030270},{"_id":"themes/beautiful-hexo/.git/objects/75/7f8847851ed5f35c6aa20ed2ad8c8d91e59c31","hash":"f2d20ab5fc37d507269ac5dc3f60905a380518bf","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/80/17f3a1f8821f2e93fba42aa1eadde8165cc5d2","hash":"3e578c09f753b417c243f35c0dbe2bc8e12defa4","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/92/c0388c9114bfed4a3831233ae8fd16baeec57c","hash":"4d455e7d98206a4aa97531212ed5780c87a3b9a7","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/97/b159e3d0a28f8c06a0699be852b0cb71bf2582","hash":"69ebcd414e1debaa069e91fda7160c81135c31c7","modified":1501134033482},{"_id":"themes/beautiful-hexo/.git/objects/89/18152db5d9ca5e8fd00712c62cfd3502d81a5f","hash":"7acb80a99fefdc484ac450709396382a393c5c5f","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/95/19efc0304e06cb81ce8b018568d8ac8b36952d","hash":"f6782548e73aeaaffca29e4b440020e27aa8f619","modified":1501134023610},{"_id":"themes/beautiful-hexo/.git/objects/9f/e8e14135051fa10987641a33b2abc528384e7b","hash":"2e3e0a3356a4da3c3840ac72cbf10dae796f7537","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/9d/bb9f78daf0f3067f93fc227c63144cab46e731","hash":"b067f587feace9a65beaaf76a570362f932b2d90","modified":1501134030270},{"_id":"themes/beautiful-hexo/.git/objects/8d/35c386508188917004e4271904e7dfcb66ed77","hash":"874c25753026e43e525358c51a7b5e886371dc8b","modified":1501134030270},{"_id":"themes/beautiful-hexo/.git/objects/a4/e90f0267b281fa15b9c2027576c4e7e734baba","hash":"117e5cb65410993fd4179987da1d3c0804f834fa","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/9e/40f7048b87a56420d79525851f48191001165b","hash":"f507a71161e71ca2febf1dee80e85348e7d29297","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/ca/890edc72cbe26aa001f14eab6a0f0721cae9e2","hash":"6472f79454b37ef36cd26f7cfb3c265ae72d5190","modified":1501134023610},{"_id":"themes/beautiful-hexo/.git/objects/b4/670f3a82c3423d9b5abfc3e7ddc7a6e7fd9f47","hash":"22c591a0a62cafb60a6dfd2b7744bfeb4e6f7ab8","modified":1501134030270},{"_id":"themes/beautiful-hexo/.git/objects/b0/e046c9779c6e91c36ac6a34294356a9a84c516","hash":"395d950d8a8418ad6546b2b8c27c3e99e8ec0199","modified":1501134030270},{"_id":"themes/beautiful-hexo/.git/objects/d3/3a9b2ade58003a0b2194c3229da9e79dbc995f","hash":"744e8a04d70114717b68b6613e4d2a68fa188c97","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/c0/0faaf6a4460abf5024bef9eb8d45d93819d1fe","hash":"fbffb450e09b38d464f1b3962e13c76e2a822324","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/d7/e2a680c35d86b080c11b097751d29602062fff","hash":"8bf3c1caff29c6d537ff6d4014fe4dac3ca25590","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/dc/5cb3370e9357896ebda82f128ee1876d679c91","hash":"ecb5918f10fd6cdcdb2d9721205e4fb877a2e754","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/e0/4d78d5071cb5aae714b313bb8a1ba016308ed3","hash":"608d58b81f6835dd96e37054323d2c83bbc3831b","modified":1501134023610},{"_id":"themes/beautiful-hexo/.git/objects/cb/96c09709d77ac4b7051add9a7bc6a23ab07e41","hash":"71cf341fb25c7b23a606dd1ef7fae0ec1d5d7033","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/ea/1d136cb6c1285d6a250692dae86cd285491924","hash":"4a14284e16531edf66abefa156a69305f36dfdb8","modified":1501134033478},{"_id":"themes/beautiful-hexo/.git/objects/f0/ec5e7be165d9a981919156c621bf13e6f3205e","hash":"9d22b4585d7b3c2dfa29052e5b69b38173e85ef4","modified":1501134030270},{"_id":"themes/beautiful-hexo/.git/objects/f2/3b504eda275c36d79d4e831c1d19d58d2f812f","hash":"d5ea236beeb4d9df3d4567daf02faea902a2b816","modified":1501134030266},{"_id":"themes/beautiful-hexo/source/bigimgs/02.jpg","hash":"2653ffdd705d4e6976a0bf9fab46422b402bac1e","modified":1501134033506},{"_id":"themes/beautiful-hexo/.git/objects/de/093e742c08dc80b0417f11e506e84d1fd46579","hash":"1410bdc16477a8449dc969d5fc51c6d7dcb6f61a","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/f6/6a7e3a31f14176c7cfdf36bb942fc19788a0f9","hash":"3e9b3980498e9488daf431e05d25de525f27b25b","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/f7/9bc8c52c66e21338e5266e2aeac4c5754ca2ac","hash":"baebe7a26db169ae753b9a55898022ca8cf98f60","modified":1501134030266},{"_id":"themes/beautiful-hexo/.git/objects/6e/453c38baa78815227222613777c48cd86b901b","hash":"37497457c2e9eeff27964bc5fb90b0e1e33bdefe","modified":1501134031442},{"_id":"themes/beautiful-hexo/source/bigimgs/01.jpg","hash":"ae76cf647dbafb8028af35b4ffceef8b2e1e9e90","modified":1501134033506},{"_id":"themes/beautiful-hexo/.git/objects/ae/2a14f2c0f71ab01fbeeef5f8a53e93546a227f","hash":"7dbc54a928c651c1dfcc768efe74187b569a0d77","modified":1501134031106},{"_id":"themes/beautiful-hexo/.git/logs/refs/heads/master","hash":"7903d84d9cf146f38ec0c0124704619f6ccb5aab","modified":1501134033486},{"_id":"themes/beautiful-hexo/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1501134033486},{"_id":"themes/beautiful-hexo/source/bigimgs/03.jpg","hash":"356f0a8c82e467f931cde454b398738e27feeadf","modified":1501134033506},{"_id":"themes/beautiful-hexo/.git/logs/refs/remotes/origin/HEAD","hash":"7903d84d9cf146f38ec0c0124704619f6ccb5aab","modified":1501134033486},{"_id":"themes/beautiful-hexo/.git/objects/73/077ee876c9c09bcd25ab921c269f1a1ba8c07c","hash":"81894ea2318d59a2ff5af179bb2d0a24d1cd3a7c","modified":1501134033478},{"_id":"themes/beautiful-hexo/images/hexo-preview.png","hash":"7b7f2e94d787da46dc74f4e070d6cd74a8ae0f7f","modified":1501134033502},{"_id":"themes/beautiful-hexo/.git/objects/b6/f22f835399ff4d2cb34d52ca44f98afe0f4735","hash":"0b2a828603e96c9547606d0b2b18e04a5a141abd","modified":1501134030266},{"_id":"public/atom.xml","hash":"67950772ac589ba9dbdd8c0d1ea1a05577ea7d59","modified":1501154089118},{"_id":"public/sitemap.xml","hash":"80d75c1dd36e62e3482d94e9eb4257b72a57a160","modified":1501154089119},{"_id":"public/job/index.html","hash":"b39ea3819a0e36c3934f6ebd85ed065a267bd324","modified":1501154089127},{"_id":"public/about/index.html","hash":"3cc9ad23d0038832245579b9e62d936bc277e076","modified":1501154089128},{"_id":"public/archives/index.html","hash":"eae17e5b77778d52dddf5507fac226770327bf42","modified":1501154089128},{"_id":"public/index.html","hash":"15a7ed6155b30bcad034571c42d662a043bc2222","modified":1501154089128},{"_id":"public/2017/07/27/httpCache/index.html","hash":"84145ac1d411792eab3d89f0513098b799d344bb","modified":1501154089129},{"_id":"public/2017/07/27/hello-world/index.html","hash":"1f1a98dbae3e20a56aa34febaa1133244f67f87e","modified":1501154089130},{"_id":"public/hexo.png","hash":"e814051ff5e255deebff24733f760a898f8f2e69","modified":1501154089132},{"_id":"public/css/blueprint-dark.png","hash":"725b992538a19f5ded0329c8a778dcd74bca7522","modified":1501154089133},{"_id":"public/css/highlight.css","hash":"3c0cd05d7c1e3d00203e72a3f6ac99f521e2455c","modified":1501154089144},{"_id":"public/css/main-minimal.css","hash":"e2b7f8ccfdb858c3969c756aa94a761970349d68","modified":1501154089144},{"_id":"public/css/main.css","hash":"4068f67e04bad6565973ee7d6830879f2093cbd8","modified":1501154089144},{"_id":"public/css/normalize.min.css","hash":"a8d03b757f75752e15aa9e43ed8c071cb50e848d","modified":1501154089144},{"_id":"public/css/pygment_highlights.css","hash":"f4e5374eae88aa573b9bef83ae131a0f05cc94e7","modified":1501154089144},{"_id":"public/css/normalize.css","hash":"6924ce12bf79586ce0c095157aed4438e97bbe89","modified":1501154089144},{"_id":"public/js/main.js","hash":"9e9bf3864ac1db24c5b20f46d92557b815d36d93","modified":1501154089144},{"_id":"public/bigimgs/01.jpg","hash":"ae76cf647dbafb8028af35b4ffceef8b2e1e9e90","modified":1501154089144},{"_id":"public/bigimgs/02.jpg","hash":"2653ffdd705d4e6976a0bf9fab46422b402bac1e","modified":1501154089144},{"_id":"public/bigimgs/03.jpg","hash":"356f0a8c82e467f931cde454b398738e27feeadf","modified":1501154089153}],"Category":[],"Data":[],"Page":[{"_content":"","source":"job/index.md","raw":"","date":"2017-07-27T05:28:50.509Z","updated":"2017-07-27T05:28:50.509Z","path":"job/index.html","title":"","comments":1,"layout":"page","_id":"cj5mcdv3p0000kv6z3ofie3r8","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"## 我们需要你  \n\n一、随行付是干嘛的  \n\n随行付支付有限公司是国内领先第三方支付公司，随行付于2011年7月成立，总部位于北京，现有上千名员工，在全国等设有28家分公司。拥有人民银行颁发的全国银行卡收单牌照、互联网支付牌照、移动电话支付牌照、跨境人民币结算服务资质。并于2017年6月成功续展第三方支付牌照。\n\n自公司成立以来，随行付秉承着普惠、科技、创新的理念，为商户提供个人支付、商户收单等业务，致力成为国内小微企业移动金融专家。随行付是中国支付清算协会理事单位，银联成员机构单位。\n\n随行付已成为首批支持银联二维码支付标准的支付机构之一，意味着随行付将进入国内发展最迅速的条码支付受理体系。结合随行付产品体系中的移动支付、智能POS支付及金融增值服务，以及其销售渠道和风控优势，随行付将致力成为广大中小微线下商户最值得信赖的金融支付解决方案供应商。\n\n二、随行付大前端团队是怎么工作的  \n\n做为对前端本身的一种能力范围眼神，随行付大前端包括，\b管理系统前端、移动网页、Native like（Weex、React Native）、Native App、Nginx层等。\n\n从分工上，我们按照业务单元划分了若干业务小组，支持根据需要灵活的进行调配。同时我们有基础组负责框架、工具、规范的开发。分工的原则是框架和业务需要互相的渗透、不能相互脱离。\n\n这样将大部分人放在一个大前端团队里，最明显的好处是：大家可以在专业上很方便的互相学习、沟通、提高；在日常的业务需求开发之外，每个人都可以进行框架的完善、组件库的建设、和其他工程化的一些事情；通过前端基础框架工具的共享重用、开发资源的高效配置，以更好的支撑好各业务前端。\n\n三、大前端团队我们要做的事情  \n\n1、从开发、构建、部署、运行方面建立更完善的前端工程化体系\b。\n3、找到更多React、React Native等技术的最佳实践。\n2、建设自由且充满可能的文化，持续的帮助团队成员提升自身水平。\n\n\n三、所以我们在招更多小伙伴\n\n1、熟悉 HTML / CSS / JS ；对前端工程化与模块化开发有一定了解；具备跨终端的前端开发能力，在Web（PC+Mobile）/Node.js/Native App三个方向上至少精通一个方向，具备多个的更佳，鼓励在Native和Web技术融合上的探索； \n2、具备良好的团队协作精神，能利用自身技术能力提升团队整体研发效率，提高团队影响力； \n3、对前端技术有持续的热情，个性乐观开朗，逻辑性强，善于和各种背景的人合作。\n\n五、待遇  \n- 高于业界水平的待遇\n- 五险一金、补充医疗\n- 餐补、通勤班车\n- 弹性工作，早上上班在 10:00 以后\n \n联系：xu_jb@suixingpay.com","source":"about/index.md","raw":"## 我们需要你  \n\n一、随行付是干嘛的  \n\n随行付支付有限公司是国内领先第三方支付公司，随行付于2011年7月成立，总部位于北京，现有上千名员工，在全国等设有28家分公司。拥有人民银行颁发的全国银行卡收单牌照、互联网支付牌照、移动电话支付牌照、跨境人民币结算服务资质。并于2017年6月成功续展第三方支付牌照。\n\n自公司成立以来，随行付秉承着普惠、科技、创新的理念，为商户提供个人支付、商户收单等业务，致力成为国内小微企业移动金融专家。随行付是中国支付清算协会理事单位，银联成员机构单位。\n\n随行付已成为首批支持银联二维码支付标准的支付机构之一，意味着随行付将进入国内发展最迅速的条码支付受理体系。结合随行付产品体系中的移动支付、智能POS支付及金融增值服务，以及其销售渠道和风控优势，随行付将致力成为广大中小微线下商户最值得信赖的金融支付解决方案供应商。\n\n二、随行付大前端团队是怎么工作的  \n\n做为对前端本身的一种能力范围眼神，随行付大前端包括，\b管理系统前端、移动网页、Native like（Weex、React Native）、Native App、Nginx层等。\n\n从分工上，我们按照业务单元划分了若干业务小组，支持根据需要灵活的进行调配。同时我们有基础组负责框架、工具、规范的开发。分工的原则是框架和业务需要互相的渗透、不能相互脱离。\n\n这样将大部分人放在一个大前端团队里，最明显的好处是：大家可以在专业上很方便的互相学习、沟通、提高；在日常的业务需求开发之外，每个人都可以进行框架的完善、组件库的建设、和其他工程化的一些事情；通过前端基础框架工具的共享重用、开发资源的高效配置，以更好的支撑好各业务前端。\n\n三、大前端团队我们要做的事情  \n\n1、从开发、构建、部署、运行方面建立更完善的前端工程化体系\b。\n3、找到更多React、React Native等技术的最佳实践。\n2、建设自由且充满可能的文化，持续的帮助团队成员提升自身水平。\n\n\n三、所以我们在招更多小伙伴\n\n1、熟悉 HTML / CSS / JS ；对前端工程化与模块化开发有一定了解；具备跨终端的前端开发能力，在Web（PC+Mobile）/Node.js/Native App三个方向上至少精通一个方向，具备多个的更佳，鼓励在Native和Web技术融合上的探索； \n2、具备良好的团队协作精神，能利用自身技术能力提升团队整体研发效率，提高团队影响力； \n3、对前端技术有持续的热情，个性乐观开朗，逻辑性强，善于和各种背景的人合作。\n\n五、待遇  \n- 高于业界水平的待遇\n- 五险一金、补充医疗\n- 餐补、通勤班车\n- 弹性工作，早上上班在 10:00 以后\n \n联系：xu_jb@suixingpay.com","date":"2017-07-27T05:28:50.509Z","updated":"2017-07-27T05:28:50.509Z","path":"about/index.html","title":"","comments":1,"layout":"page","_id":"cj5mcdv4a0002kv6z2bwvesg5","content":"<h2 id=\"我们需要你\"><a href=\"#我们需要你\" class=\"headerlink\" title=\"我们需要你\"></a>我们需要你</h2><p>一、随行付是干嘛的  </p>\n<p>随行付支付有限公司是国内领先第三方支付公司，随行付于2011年7月成立，总部位于北京，现有上千名员工，在全国等设有28家分公司。拥有人民银行颁发的全国银行卡收单牌照、互联网支付牌照、移动电话支付牌照、跨境人民币结算服务资质。并于2017年6月成功续展第三方支付牌照。</p>\n<p>自公司成立以来，随行付秉承着普惠、科技、创新的理念，为商户提供个人支付、商户收单等业务，致力成为国内小微企业移动金融专家。随行付是中国支付清算协会理事单位，银联成员机构单位。</p>\n<p>随行付已成为首批支持银联二维码支付标准的支付机构之一，意味着随行付将进入国内发展最迅速的条码支付受理体系。结合随行付产品体系中的移动支付、智能POS支付及金融增值服务，以及其销售渠道和风控优势，随行付将致力成为广大中小微线下商户最值得信赖的金融支付解决方案供应商。</p>\n<p>二、随行付大前端团队是怎么工作的  </p>\n<p>做为对前端本身的一种能力范围眼神，随行付大前端包括，\b管理系统前端、移动网页、Native like（Weex、React Native）、Native App、Nginx层等。</p>\n<p>从分工上，我们按照业务单元划分了若干业务小组，支持根据需要灵活的进行调配。同时我们有基础组负责框架、工具、规范的开发。分工的原则是框架和业务需要互相的渗透、不能相互脱离。</p>\n<p>这样将大部分人放在一个大前端团队里，最明显的好处是：大家可以在专业上很方便的互相学习、沟通、提高；在日常的业务需求开发之外，每个人都可以进行框架的完善、组件库的建设、和其他工程化的一些事情；通过前端基础框架工具的共享重用、开发资源的高效配置，以更好的支撑好各业务前端。</p>\n<p>三、大前端团队我们要做的事情  </p>\n<p>1、从开发、构建、部署、运行方面建立更完善的前端工程化体系\b。<br>3、找到更多React、React Native等技术的最佳实践。<br>2、建设自由且充满可能的文化，持续的帮助团队成员提升自身水平。</p>\n<p>三、所以我们在招更多小伙伴</p>\n<p>1、熟悉 HTML / CSS / JS ；对前端工程化与模块化开发有一定了解；具备跨终端的前端开发能力，在Web（PC+Mobile）/Node.js/Native App三个方向上至少精通一个方向，具备多个的更佳，鼓励在Native和Web技术融合上的探索；<br>2、具备良好的团队协作精神，能利用自身技术能力提升团队整体研发效率，提高团队影响力；<br>3、对前端技术有持续的热情，个性乐观开朗，逻辑性强，善于和各种背景的人合作。</p>\n<p>五、待遇  </p>\n<ul>\n<li>高于业界水平的待遇</li>\n<li>五险一金、补充医疗</li>\n<li>餐补、通勤班车</li>\n<li>弹性工作，早上上班在 10:00 以后</li>\n</ul>\n<p>联系：xu_jb@suixingpay.com</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"我们需要你\"><a href=\"#我们需要你\" class=\"headerlink\" title=\"我们需要你\"></a>我们需要你</h2><p>一、随行付是干嘛的  </p>\n<p>随行付支付有限公司是国内领先第三方支付公司，随行付于2011年7月成立，总部位于北京，现有上千名员工，在全国等设有28家分公司。拥有人民银行颁发的全国银行卡收单牌照、互联网支付牌照、移动电话支付牌照、跨境人民币结算服务资质。并于2017年6月成功续展第三方支付牌照。</p>\n<p>自公司成立以来，随行付秉承着普惠、科技、创新的理念，为商户提供个人支付、商户收单等业务，致力成为国内小微企业移动金融专家。随行付是中国支付清算协会理事单位，银联成员机构单位。</p>\n<p>随行付已成为首批支持银联二维码支付标准的支付机构之一，意味着随行付将进入国内发展最迅速的条码支付受理体系。结合随行付产品体系中的移动支付、智能POS支付及金融增值服务，以及其销售渠道和风控优势，随行付将致力成为广大中小微线下商户最值得信赖的金融支付解决方案供应商。</p>\n<p>二、随行付大前端团队是怎么工作的  </p>\n<p>做为对前端本身的一种能力范围眼神，随行付大前端包括，\b管理系统前端、移动网页、Native like（Weex、React Native）、Native App、Nginx层等。</p>\n<p>从分工上，我们按照业务单元划分了若干业务小组，支持根据需要灵活的进行调配。同时我们有基础组负责框架、工具、规范的开发。分工的原则是框架和业务需要互相的渗透、不能相互脱离。</p>\n<p>这样将大部分人放在一个大前端团队里，最明显的好处是：大家可以在专业上很方便的互相学习、沟通、提高；在日常的业务需求开发之外，每个人都可以进行框架的完善、组件库的建设、和其他工程化的一些事情；通过前端基础框架工具的共享重用、开发资源的高效配置，以更好的支撑好各业务前端。</p>\n<p>三、大前端团队我们要做的事情  </p>\n<p>1、从开发、构建、部署、运行方面建立更完善的前端工程化体系\b。<br>3、找到更多React、React Native等技术的最佳实践。<br>2、建设自由且充满可能的文化，持续的帮助团队成员提升自身水平。</p>\n<p>三、所以我们在招更多小伙伴</p>\n<p>1、熟悉 HTML / CSS / JS ；对前端工程化与模块化开发有一定了解；具备跨终端的前端开发能力，在Web（PC+Mobile）/Node.js/Native App三个方向上至少精通一个方向，具备多个的更佳，鼓励在Native和Web技术融合上的探索；<br>2、具备良好的团队协作精神，能利用自身技术能力提升团队整体研发效率，提高团队影响力；<br>3、对前端技术有持续的热情，个性乐观开朗，逻辑性强，善于和各种背景的人合作。</p>\n<p>五、待遇  </p>\n<ul>\n<li>高于业界水平的待遇</li>\n<li>五险一金、补充医疗</li>\n<li>餐补、通勤班车</li>\n<li>弹性工作，早上上班在 10:00 以后</li>\n</ul>\n<p>联系：xu_jb@suixingpay.com</p>\n"}],"Post":[{"title":"Hello World","_content":"","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\n","slug":"hello-world","published":1,"date":"2017-07-27T02:26:32.379Z","updated":"2017-07-27T02:26:32.379Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5mcdv410001kv6zwlrac9s4","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"post","title":"httpCache","date":"2017-07-27T06:07:32.000Z","_content":"## <center>HTTP缓存</center>\n###  引言 什么是缓存\n> &ensp;&ensp;通过url请求后台资源即慢,又比较耗流量,HTTP协议为我们提供了控制缓存部分以使Http客户端可以缓存和重用以前获取的资源，从而优化性能，提升体验。简单来说http缓存就是客户端缓存,将一些服务器上的静态文件(css,js,图片等)保存到本地,然后下次在次加载这个文件时根据http缓存方式,不去服务器端读取,而是直接在本地读取。\n\n我们先来看一下在http报文中相关首部的字段\n请求报文和响应报文都能用上的字段\n\n|    字段                       |        说明                 |\n| ----------                    |                         --- |\n| Cache-control                 |  控制是否被缓存                |\n| pragma                        |  http1.0版本,值为no-cache时禁止缓存|\n\n请求中(Request Headers)字段\n\n|    字段                     |        说明                 |\n| ----------                 |                         --- |\n| If-Match                   | 比较ETag是否一致                |\n| If-None-Match              |  比较ETag是否一致|\n| If-Modified-Since          | 比较资源最后更新时间是否一致                |\n| If-UnModified-Since        | 比较资源最后更新时间是否一致|\n响应中(Response Headers)字段\n\n|    字段                     |        说明                 |\n| ----------                 |                         --- |\n| ETag                       | 匹配资源信息              |\n| Last-Modified             | 文件最后修改的时间             |\n| Expires                    |http1.0的属性,设置过期时间     |\n#### 一&nbsp;&nbsp;缓存策略\n##### 1.缓存存储策略\n*用来确定 HTTP 响应内容是否可以被客户端缓存，以及可以被哪些客户端缓存。* 利用属性Cache-Control 属性设置文件是否被缓存,其中常用的属性有public private max-age no-catch no-store其中前四种可以将文件缓存,而no-store 文件将不会被缓存,为什么是可能呢? 因为文件是有新鲜度(也就是是否过期)的,如果文件超过了新鲜度呢,接下来就要说缓存过期策略了\n##### 2. 缓存过期策略\n*客户端用来确认存储在本地的缓存数据是否已过期，进而决定是否要发请求到服务端获取数据*\n既然文件缓存可以过期,那么就应该存在一个过期时间然后有一个字段去记录这个过期时间,在http1.0中用Expires来记录这个过期时间当超过这个有效时间后,本地缓存就作废了,就必须去服务器再次请求,不过在HTTP1.1中增加了Cache-Control 可以设置max-age来设置过期时间且*Cache-Control优先级高于Expires*\n但是缓存过期了,客户端的缓存一定不能用了吗?答案是否定的,接下来就是要说的缓存对比策略\n##### 3. 缓存对比策略\n将缓存在客户端的数据标识发往服务端，服务端通过标识来判断客户端 缓存数据是否仍有效，进而决定是否要重发数据。\n客户端检测到数据过期或浏览器刷新后，往往会重新发起一个 http 请求到服务器，服务器此时并不急于返回数据，而是看请求头有没有带标识（ If-Modified-Since、If-None-Match）过来，如果判断标识仍然有效，则返回304告诉客户端取本地缓存数据来用即可（这里要注意的是你必须要在首次响应时输出相应的头信息（Last-Modified、ETags）到客户端）。至此我们就明白了上面所说的本地缓存数据即使被认为过期，并不等于数据从此就没用了的道理了。\n\n缓存的策略大致就是 通过Cache-Control或者是Expires设置本地缓存,当缓存过期后请求后台,后台根据Etag或If-Modified-Since 来判断当前缓存是否可用,可用则返回一个304状态吗,继续用这个缓存,不可用就会重新加载这个文件\n#### 二 强缓存与协商缓存\n##### 1.强缓存\n浏览器在第一次请求发生后，再次请求时:浏览器在请求某一资源时，会先获取该资源缓存的header信息，判断是否命中强缓存（cache-control和expires信息），若命中直接从缓存中获取资源信息，包括缓存header信息；本次请求根本就不会与服务器进行通信\n##### 2.协商缓存\n如果没有命中强缓存,浏览器会发送请求到服务器,请求会携带第一次请求返回的有关缓存的header字段信息(Last-Modified/If-Modified-Since和Etag/If-None-Match),由服务器根据请求中的相关header信息来比对结果是否协商缓存命中;若命中,则服务器返回新的响应header信息更新缓存中的对应header信息,但是并不返回资源内容,它会告知浏览器可以直接从缓存获取;否则返回最新的资源内容;\n##### 3.强缓存与协商缓存的区别\n相同点: 都是从缓存中读取数据\n不同点: 强缓存不会请求服务器,而协商缓存同过访问服务器来告知缓存是否可用,强缓存返回状态吗200 (from cache) 协商缓存 返回304 (not modified)\n\n如果你看了上面的还是蒙蒙的那么请看下面,当我们第一次请求时打开network,我们将看到下图\n当我们第一次请求某个网页时所有请求返回状态码均为200\n![Alt text](https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/1.png?raw=true)\n当我们再次刷新时可以看到状态码变成了304,和200 size变成from cache\n![Alt text](https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/2.png?raw=true)\n当状态码为200时我们点进去可以看到 属性cache-control:max-age属性 和 Expires 属性 可以看出时间均没过期,也就是这是个强缓存,这个文件不会请求服务器\n![Alt text](https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/3.png?raw=true)\n当状态码为304时可以看到max-age=0也就是说会请求服务器,和服务器协商,然后服务器根据Eage或者 If-Modified-Since 来判断是否继续使用该缓存,如果判断成功,那么返回状态码304,并且继续使用该缓存,失败则重新加载文件\n![Alt text](https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/4.png?raw=true)\n最后贴一张HTTP缓存的流程图\n![Alt text](https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/5.png?raw=true)\n","source":"_posts/httpCache.md","raw":"---\nlayout: post\ntitle: httpCache\ndate: 2017-07-27 14:07:32\ntags:\n---\n## <center>HTTP缓存</center>\n###  引言 什么是缓存\n> &ensp;&ensp;通过url请求后台资源即慢,又比较耗流量,HTTP协议为我们提供了控制缓存部分以使Http客户端可以缓存和重用以前获取的资源，从而优化性能，提升体验。简单来说http缓存就是客户端缓存,将一些服务器上的静态文件(css,js,图片等)保存到本地,然后下次在次加载这个文件时根据http缓存方式,不去服务器端读取,而是直接在本地读取。\n\n我们先来看一下在http报文中相关首部的字段\n请求报文和响应报文都能用上的字段\n\n|    字段                       |        说明                 |\n| ----------                    |                         --- |\n| Cache-control                 |  控制是否被缓存                |\n| pragma                        |  http1.0版本,值为no-cache时禁止缓存|\n\n请求中(Request Headers)字段\n\n|    字段                     |        说明                 |\n| ----------                 |                         --- |\n| If-Match                   | 比较ETag是否一致                |\n| If-None-Match              |  比较ETag是否一致|\n| If-Modified-Since          | 比较资源最后更新时间是否一致                |\n| If-UnModified-Since        | 比较资源最后更新时间是否一致|\n响应中(Response Headers)字段\n\n|    字段                     |        说明                 |\n| ----------                 |                         --- |\n| ETag                       | 匹配资源信息              |\n| Last-Modified             | 文件最后修改的时间             |\n| Expires                    |http1.0的属性,设置过期时间     |\n#### 一&nbsp;&nbsp;缓存策略\n##### 1.缓存存储策略\n*用来确定 HTTP 响应内容是否可以被客户端缓存，以及可以被哪些客户端缓存。* 利用属性Cache-Control 属性设置文件是否被缓存,其中常用的属性有public private max-age no-catch no-store其中前四种可以将文件缓存,而no-store 文件将不会被缓存,为什么是可能呢? 因为文件是有新鲜度(也就是是否过期)的,如果文件超过了新鲜度呢,接下来就要说缓存过期策略了\n##### 2. 缓存过期策略\n*客户端用来确认存储在本地的缓存数据是否已过期，进而决定是否要发请求到服务端获取数据*\n既然文件缓存可以过期,那么就应该存在一个过期时间然后有一个字段去记录这个过期时间,在http1.0中用Expires来记录这个过期时间当超过这个有效时间后,本地缓存就作废了,就必须去服务器再次请求,不过在HTTP1.1中增加了Cache-Control 可以设置max-age来设置过期时间且*Cache-Control优先级高于Expires*\n但是缓存过期了,客户端的缓存一定不能用了吗?答案是否定的,接下来就是要说的缓存对比策略\n##### 3. 缓存对比策略\n将缓存在客户端的数据标识发往服务端，服务端通过标识来判断客户端 缓存数据是否仍有效，进而决定是否要重发数据。\n客户端检测到数据过期或浏览器刷新后，往往会重新发起一个 http 请求到服务器，服务器此时并不急于返回数据，而是看请求头有没有带标识（ If-Modified-Since、If-None-Match）过来，如果判断标识仍然有效，则返回304告诉客户端取本地缓存数据来用即可（这里要注意的是你必须要在首次响应时输出相应的头信息（Last-Modified、ETags）到客户端）。至此我们就明白了上面所说的本地缓存数据即使被认为过期，并不等于数据从此就没用了的道理了。\n\n缓存的策略大致就是 通过Cache-Control或者是Expires设置本地缓存,当缓存过期后请求后台,后台根据Etag或If-Modified-Since 来判断当前缓存是否可用,可用则返回一个304状态吗,继续用这个缓存,不可用就会重新加载这个文件\n#### 二 强缓存与协商缓存\n##### 1.强缓存\n浏览器在第一次请求发生后，再次请求时:浏览器在请求某一资源时，会先获取该资源缓存的header信息，判断是否命中强缓存（cache-control和expires信息），若命中直接从缓存中获取资源信息，包括缓存header信息；本次请求根本就不会与服务器进行通信\n##### 2.协商缓存\n如果没有命中强缓存,浏览器会发送请求到服务器,请求会携带第一次请求返回的有关缓存的header字段信息(Last-Modified/If-Modified-Since和Etag/If-None-Match),由服务器根据请求中的相关header信息来比对结果是否协商缓存命中;若命中,则服务器返回新的响应header信息更新缓存中的对应header信息,但是并不返回资源内容,它会告知浏览器可以直接从缓存获取;否则返回最新的资源内容;\n##### 3.强缓存与协商缓存的区别\n相同点: 都是从缓存中读取数据\n不同点: 强缓存不会请求服务器,而协商缓存同过访问服务器来告知缓存是否可用,强缓存返回状态吗200 (from cache) 协商缓存 返回304 (not modified)\n\n如果你看了上面的还是蒙蒙的那么请看下面,当我们第一次请求时打开network,我们将看到下图\n当我们第一次请求某个网页时所有请求返回状态码均为200\n![Alt text](https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/1.png?raw=true)\n当我们再次刷新时可以看到状态码变成了304,和200 size变成from cache\n![Alt text](https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/2.png?raw=true)\n当状态码为200时我们点进去可以看到 属性cache-control:max-age属性 和 Expires 属性 可以看出时间均没过期,也就是这是个强缓存,这个文件不会请求服务器\n![Alt text](https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/3.png?raw=true)\n当状态码为304时可以看到max-age=0也就是说会请求服务器,和服务器协商,然后服务器根据Eage或者 If-Modified-Since 来判断是否继续使用该缓存,如果判断成功,那么返回状态码304,并且继续使用该缓存,失败则重新加载文件\n![Alt text](https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/4.png?raw=true)\n最后贴一张HTTP缓存的流程图\n![Alt text](https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/5.png?raw=true)\n","slug":"httpCache","published":1,"updated":"2017-07-27T09:49:43.778Z","comments":1,"photos":[],"link":"","_id":"cj5mcdv4d0003kv6z8n6l29cr","content":"<h2 id=\"HTTP缓存\"><a href=\"#HTTP缓存\" class=\"headerlink\" title=\"HTTP缓存\"></a><center>HTTP缓存</center></h2><h3 id=\"引言-什么是缓存\"><a href=\"#引言-什么是缓存\" class=\"headerlink\" title=\"引言 什么是缓存\"></a>引言 什么是缓存</h3><blockquote>\n<p>&ensp;&ensp;通过url请求后台资源即慢,又比较耗流量,HTTP协议为我们提供了控制缓存部分以使Http客户端可以缓存和重用以前获取的资源，从而优化性能，提升体验。简单来说http缓存就是客户端缓存,将一些服务器上的静态文件(css,js,图片等)保存到本地,然后下次在次加载这个文件时根据http缓存方式,不去服务器端读取,而是直接在本地读取。</p>\n</blockquote>\n<p>我们先来看一下在http报文中相关首部的字段<br>请求报文和响应报文都能用上的字段</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cache-control</td>\n<td>控制是否被缓存</td>\n</tr>\n<tr>\n<td>pragma</td>\n<td>http1.0版本,值为no-cache时禁止缓存</td>\n</tr>\n</tbody>\n</table>\n<p>请求中(Request Headers)字段</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>If-Match</td>\n<td>比较ETag是否一致</td>\n</tr>\n<tr>\n<td>If-None-Match</td>\n<td>比较ETag是否一致</td>\n</tr>\n<tr>\n<td>If-Modified-Since</td>\n<td>比较资源最后更新时间是否一致</td>\n</tr>\n<tr>\n<td>If-UnModified-Since</td>\n<td>比较资源最后更新时间是否一致</td>\n</tr>\n</tbody>\n</table>\n<p>响应中(Response Headers)字段</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ETag</td>\n<td>匹配资源信息</td>\n</tr>\n<tr>\n<td>Last-Modified</td>\n<td>文件最后修改的时间</td>\n</tr>\n<tr>\n<td>Expires</td>\n<td>http1.0的属性,设置过期时间</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"一-nbsp-nbsp-缓存策略\"><a href=\"#一-nbsp-nbsp-缓存策略\" class=\"headerlink\" title=\"一&nbsp;&nbsp;缓存策略\"></a>一&nbsp;&nbsp;缓存策略</h4><h5 id=\"1-缓存存储策略\"><a href=\"#1-缓存存储策略\" class=\"headerlink\" title=\"1.缓存存储策略\"></a>1.缓存存储策略</h5><p><em>用来确定 HTTP 响应内容是否可以被客户端缓存，以及可以被哪些客户端缓存。</em> 利用属性Cache-Control 属性设置文件是否被缓存,其中常用的属性有public private max-age no-catch no-store其中前四种可以将文件缓存,而no-store 文件将不会被缓存,为什么是可能呢? 因为文件是有新鲜度(也就是是否过期)的,如果文件超过了新鲜度呢,接下来就要说缓存过期策略了</p>\n<h5 id=\"2-缓存过期策略\"><a href=\"#2-缓存过期策略\" class=\"headerlink\" title=\"2. 缓存过期策略\"></a>2. 缓存过期策略</h5><p><em>客户端用来确认存储在本地的缓存数据是否已过期，进而决定是否要发请求到服务端获取数据</em><br>既然文件缓存可以过期,那么就应该存在一个过期时间然后有一个字段去记录这个过期时间,在http1.0中用Expires来记录这个过期时间当超过这个有效时间后,本地缓存就作废了,就必须去服务器再次请求,不过在HTTP1.1中增加了Cache-Control 可以设置max-age来设置过期时间且<em>Cache-Control优先级高于Expires</em><br>但是缓存过期了,客户端的缓存一定不能用了吗?答案是否定的,接下来就是要说的缓存对比策略</p>\n<h5 id=\"3-缓存对比策略\"><a href=\"#3-缓存对比策略\" class=\"headerlink\" title=\"3. 缓存对比策略\"></a>3. 缓存对比策略</h5><p>将缓存在客户端的数据标识发往服务端，服务端通过标识来判断客户端 缓存数据是否仍有效，进而决定是否要重发数据。<br>客户端检测到数据过期或浏览器刷新后，往往会重新发起一个 http 请求到服务器，服务器此时并不急于返回数据，而是看请求头有没有带标识（ If-Modified-Since、If-None-Match）过来，如果判断标识仍然有效，则返回304告诉客户端取本地缓存数据来用即可（这里要注意的是你必须要在首次响应时输出相应的头信息（Last-Modified、ETags）到客户端）。至此我们就明白了上面所说的本地缓存数据即使被认为过期，并不等于数据从此就没用了的道理了。</p>\n<p>缓存的策略大致就是 通过Cache-Control或者是Expires设置本地缓存,当缓存过期后请求后台,后台根据Etag或If-Modified-Since 来判断当前缓存是否可用,可用则返回一个304状态吗,继续用这个缓存,不可用就会重新加载这个文件</p>\n<h4 id=\"二-强缓存与协商缓存\"><a href=\"#二-强缓存与协商缓存\" class=\"headerlink\" title=\"二 强缓存与协商缓存\"></a>二 强缓存与协商缓存</h4><h5 id=\"1-强缓存\"><a href=\"#1-强缓存\" class=\"headerlink\" title=\"1.强缓存\"></a>1.强缓存</h5><p>浏览器在第一次请求发生后，再次请求时:浏览器在请求某一资源时，会先获取该资源缓存的header信息，判断是否命中强缓存（cache-control和expires信息），若命中直接从缓存中获取资源信息，包括缓存header信息；本次请求根本就不会与服务器进行通信</p>\n<h5 id=\"2-协商缓存\"><a href=\"#2-协商缓存\" class=\"headerlink\" title=\"2.协商缓存\"></a>2.协商缓存</h5><p>如果没有命中强缓存,浏览器会发送请求到服务器,请求会携带第一次请求返回的有关缓存的header字段信息(Last-Modified/If-Modified-Since和Etag/If-None-Match),由服务器根据请求中的相关header信息来比对结果是否协商缓存命中;若命中,则服务器返回新的响应header信息更新缓存中的对应header信息,但是并不返回资源内容,它会告知浏览器可以直接从缓存获取;否则返回最新的资源内容;</p>\n<h5 id=\"3-强缓存与协商缓存的区别\"><a href=\"#3-强缓存与协商缓存的区别\" class=\"headerlink\" title=\"3.强缓存与协商缓存的区别\"></a>3.强缓存与协商缓存的区别</h5><p>相同点: 都是从缓存中读取数据<br>不同点: 强缓存不会请求服务器,而协商缓存同过访问服务器来告知缓存是否可用,强缓存返回状态吗200 (from cache) 协商缓存 返回304 (not modified)</p>\n<p>如果你看了上面的还是蒙蒙的那么请看下面,当我们第一次请求时打开network,我们将看到下图<br>当我们第一次请求某个网页时所有请求返回状态码均为200<br><img src=\"https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/1.png?raw=true\" alt=\"Alt text\"><br>当我们再次刷新时可以看到状态码变成了304,和200 size变成from cache<br><img src=\"https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/2.png?raw=true\" alt=\"Alt text\"><br>当状态码为200时我们点进去可以看到 属性cache-control:max-age属性 和 Expires 属性 可以看出时间均没过期,也就是这是个强缓存,这个文件不会请求服务器<br><img src=\"https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/3.png?raw=true\" alt=\"Alt text\"><br>当状态码为304时可以看到max-age=0也就是说会请求服务器,和服务器协商,然后服务器根据Eage或者 If-Modified-Since 来判断是否继续使用该缓存,如果判断成功,那么返回状态码304,并且继续使用该缓存,失败则重新加载文件<br><img src=\"https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/4.png?raw=true\" alt=\"Alt text\"><br>最后贴一张HTTP缓存的流程图<br><img src=\"https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/5.png?raw=true\" alt=\"Alt text\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"HTTP缓存\"><a href=\"#HTTP缓存\" class=\"headerlink\" title=\"HTTP缓存\"></a><center>HTTP缓存</center></h2><h3 id=\"引言-什么是缓存\"><a href=\"#引言-什么是缓存\" class=\"headerlink\" title=\"引言 什么是缓存\"></a>引言 什么是缓存</h3><blockquote>\n<p>&ensp;&ensp;通过url请求后台资源即慢,又比较耗流量,HTTP协议为我们提供了控制缓存部分以使Http客户端可以缓存和重用以前获取的资源，从而优化性能，提升体验。简单来说http缓存就是客户端缓存,将一些服务器上的静态文件(css,js,图片等)保存到本地,然后下次在次加载这个文件时根据http缓存方式,不去服务器端读取,而是直接在本地读取。</p>\n</blockquote>\n<p>我们先来看一下在http报文中相关首部的字段<br>请求报文和响应报文都能用上的字段</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cache-control</td>\n<td>控制是否被缓存</td>\n</tr>\n<tr>\n<td>pragma</td>\n<td>http1.0版本,值为no-cache时禁止缓存</td>\n</tr>\n</tbody>\n</table>\n<p>请求中(Request Headers)字段</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>If-Match</td>\n<td>比较ETag是否一致</td>\n</tr>\n<tr>\n<td>If-None-Match</td>\n<td>比较ETag是否一致</td>\n</tr>\n<tr>\n<td>If-Modified-Since</td>\n<td>比较资源最后更新时间是否一致</td>\n</tr>\n<tr>\n<td>If-UnModified-Since</td>\n<td>比较资源最后更新时间是否一致</td>\n</tr>\n</tbody>\n</table>\n<p>响应中(Response Headers)字段</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ETag</td>\n<td>匹配资源信息</td>\n</tr>\n<tr>\n<td>Last-Modified</td>\n<td>文件最后修改的时间</td>\n</tr>\n<tr>\n<td>Expires</td>\n<td>http1.0的属性,设置过期时间</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"一-nbsp-nbsp-缓存策略\"><a href=\"#一-nbsp-nbsp-缓存策略\" class=\"headerlink\" title=\"一&nbsp;&nbsp;缓存策略\"></a>一&nbsp;&nbsp;缓存策略</h4><h5 id=\"1-缓存存储策略\"><a href=\"#1-缓存存储策略\" class=\"headerlink\" title=\"1.缓存存储策略\"></a>1.缓存存储策略</h5><p><em>用来确定 HTTP 响应内容是否可以被客户端缓存，以及可以被哪些客户端缓存。</em> 利用属性Cache-Control 属性设置文件是否被缓存,其中常用的属性有public private max-age no-catch no-store其中前四种可以将文件缓存,而no-store 文件将不会被缓存,为什么是可能呢? 因为文件是有新鲜度(也就是是否过期)的,如果文件超过了新鲜度呢,接下来就要说缓存过期策略了</p>\n<h5 id=\"2-缓存过期策略\"><a href=\"#2-缓存过期策略\" class=\"headerlink\" title=\"2. 缓存过期策略\"></a>2. 缓存过期策略</h5><p><em>客户端用来确认存储在本地的缓存数据是否已过期，进而决定是否要发请求到服务端获取数据</em><br>既然文件缓存可以过期,那么就应该存在一个过期时间然后有一个字段去记录这个过期时间,在http1.0中用Expires来记录这个过期时间当超过这个有效时间后,本地缓存就作废了,就必须去服务器再次请求,不过在HTTP1.1中增加了Cache-Control 可以设置max-age来设置过期时间且<em>Cache-Control优先级高于Expires</em><br>但是缓存过期了,客户端的缓存一定不能用了吗?答案是否定的,接下来就是要说的缓存对比策略</p>\n<h5 id=\"3-缓存对比策略\"><a href=\"#3-缓存对比策略\" class=\"headerlink\" title=\"3. 缓存对比策略\"></a>3. 缓存对比策略</h5><p>将缓存在客户端的数据标识发往服务端，服务端通过标识来判断客户端 缓存数据是否仍有效，进而决定是否要重发数据。<br>客户端检测到数据过期或浏览器刷新后，往往会重新发起一个 http 请求到服务器，服务器此时并不急于返回数据，而是看请求头有没有带标识（ If-Modified-Since、If-None-Match）过来，如果判断标识仍然有效，则返回304告诉客户端取本地缓存数据来用即可（这里要注意的是你必须要在首次响应时输出相应的头信息（Last-Modified、ETags）到客户端）。至此我们就明白了上面所说的本地缓存数据即使被认为过期，并不等于数据从此就没用了的道理了。</p>\n<p>缓存的策略大致就是 通过Cache-Control或者是Expires设置本地缓存,当缓存过期后请求后台,后台根据Etag或If-Modified-Since 来判断当前缓存是否可用,可用则返回一个304状态吗,继续用这个缓存,不可用就会重新加载这个文件</p>\n<h4 id=\"二-强缓存与协商缓存\"><a href=\"#二-强缓存与协商缓存\" class=\"headerlink\" title=\"二 强缓存与协商缓存\"></a>二 强缓存与协商缓存</h4><h5 id=\"1-强缓存\"><a href=\"#1-强缓存\" class=\"headerlink\" title=\"1.强缓存\"></a>1.强缓存</h5><p>浏览器在第一次请求发生后，再次请求时:浏览器在请求某一资源时，会先获取该资源缓存的header信息，判断是否命中强缓存（cache-control和expires信息），若命中直接从缓存中获取资源信息，包括缓存header信息；本次请求根本就不会与服务器进行通信</p>\n<h5 id=\"2-协商缓存\"><a href=\"#2-协商缓存\" class=\"headerlink\" title=\"2.协商缓存\"></a>2.协商缓存</h5><p>如果没有命中强缓存,浏览器会发送请求到服务器,请求会携带第一次请求返回的有关缓存的header字段信息(Last-Modified/If-Modified-Since和Etag/If-None-Match),由服务器根据请求中的相关header信息来比对结果是否协商缓存命中;若命中,则服务器返回新的响应header信息更新缓存中的对应header信息,但是并不返回资源内容,它会告知浏览器可以直接从缓存获取;否则返回最新的资源内容;</p>\n<h5 id=\"3-强缓存与协商缓存的区别\"><a href=\"#3-强缓存与协商缓存的区别\" class=\"headerlink\" title=\"3.强缓存与协商缓存的区别\"></a>3.强缓存与协商缓存的区别</h5><p>相同点: 都是从缓存中读取数据<br>不同点: 强缓存不会请求服务器,而协商缓存同过访问服务器来告知缓存是否可用,强缓存返回状态吗200 (from cache) 协商缓存 返回304 (not modified)</p>\n<p>如果你看了上面的还是蒙蒙的那么请看下面,当我们第一次请求时打开network,我们将看到下图<br>当我们第一次请求某个网页时所有请求返回状态码均为200<br><img src=\"https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/1.png?raw=true\" alt=\"Alt text\"><br>当我们再次刷新时可以看到状态码变成了304,和200 size变成from cache<br><img src=\"https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/2.png?raw=true\" alt=\"Alt text\"><br>当状态码为200时我们点进去可以看到 属性cache-control:max-age属性 和 Expires 属性 可以看出时间均没过期,也就是这是个强缓存,这个文件不会请求服务器<br><img src=\"https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/3.png?raw=true\" alt=\"Alt text\"><br>当状态码为304时可以看到max-age=0也就是说会请求服务器,和服务器协商,然后服务器根据Eage或者 If-Modified-Since 来判断是否继续使用该缓存,如果判断成功,那么返回状态码304,并且继续使用该缓存,失败则重新加载文件<br><img src=\"https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/4.png?raw=true\" alt=\"Alt text\"><br>最后贴一张HTTP缓存的流程图<br><img src=\"https://github.com/qiudong/sxfed.github.io/blob/master/bigimgs/5.png?raw=true\" alt=\"Alt text\"></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}